Simulator report for stack
Sat Nov 09 21:11:36 2024
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 241 nodes    ;
; Simulation Coverage         ;      26.14 % ;
; Total Number of Transitions ; 956          ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Stratix II   ;
; Device                      ; EP2S15F484C3 ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Timing     ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off        ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      26.14 % ;
; Total nodes checked                                 ; 241          ;
; Total output ports checked                          ; 241          ;
; Total output ports with complete 1/0-value coverage ; 63           ;
; Total output ports with no 1/0-value coverage       ; 178          ;
; Total output ports with no 1-value coverage         ; 178          ;
; Total output ports with no 0-value coverage         ; 178          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+--------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                              ;
+---------------------------+---------------------------+------------------+
; Node Name                 ; Output Port Name          ; Output Port Type ;
+---------------------------+---------------------------+------------------+
; |stack|stack_out[0]~reg0  ; |stack|stack_out[0]~reg0  ; regout           ;
; |stack|stack_out[1]~reg0  ; |stack|stack_out[1]~reg0  ; regout           ;
; |stack|stack_out[2]~reg0  ; |stack|stack_out[2]~reg0  ; regout           ;
; |stack|stack_out[3]~reg0  ; |stack|stack_out[3]~reg0  ; regout           ;
; |stack|mem_reg1[0]        ; |stack|mem_reg1[0]        ; regout           ;
; |stack|mem_reg1[1]        ; |stack|mem_reg1[1]        ; regout           ;
; |stack|mem_reg1[2]        ; |stack|mem_reg1[2]        ; regout           ;
; |stack|mem_reg1[3]        ; |stack|mem_reg1[3]        ; regout           ;
; |stack|mem_reg2[0]        ; |stack|mem_reg2[0]        ; regout           ;
; |stack|mem_reg2[1]        ; |stack|mem_reg2[1]        ; regout           ;
; |stack|mem_reg2[2]        ; |stack|mem_reg2[2]        ; regout           ;
; |stack|mem_reg2[3]        ; |stack|mem_reg2[3]        ; regout           ;
; |stack|mem_reg3[0]        ; |stack|mem_reg3[0]        ; regout           ;
; |stack|mem_reg3[1]        ; |stack|mem_reg3[1]        ; regout           ;
; |stack|mem_reg3[2]        ; |stack|mem_reg3[2]        ; regout           ;
; |stack|mem_reg4[0]        ; |stack|mem_reg4[0]        ; regout           ;
; |stack|mem_reg4[1]        ; |stack|mem_reg4[1]        ; regout           ;
; |stack|mem_reg4[2]        ; |stack|mem_reg4[2]        ; regout           ;
; |stack|mem_reg5[0]        ; |stack|mem_reg5[0]        ; regout           ;
; |stack|mem_reg5[1]        ; |stack|mem_reg5[1]        ; regout           ;
; |stack|mem_reg5[2]        ; |stack|mem_reg5[2]        ; regout           ;
; |stack|mem_reg6[0]        ; |stack|mem_reg6[0]        ; regout           ;
; |stack|mem_reg6[1]        ; |stack|mem_reg6[1]        ; regout           ;
; |stack|mem_reg6[2]        ; |stack|mem_reg6[2]        ; regout           ;
; |stack|mem_reg7[0]        ; |stack|mem_reg7[0]        ; regout           ;
; |stack|mem_reg7[1]        ; |stack|mem_reg7[1]        ; regout           ;
; |stack|mem_reg8[0]        ; |stack|mem_reg8[0]        ; regout           ;
; |stack|mem_reg8[1]        ; |stack|mem_reg8[1]        ; regout           ;
; |stack|mem_reg1[0]~0      ; |stack|mem_reg1[0]~0      ; combout          ;
; |stack|stack_out[0]       ; |stack|stack_out[0]       ; padio            ;
; |stack|stack_out[1]       ; |stack|stack_out[1]       ; padio            ;
; |stack|stack_out[2]       ; |stack|stack_out[2]       ; padio            ;
; |stack|stack_out[3]       ; |stack|stack_out[3]       ; padio            ;
; |stack|clk_in             ; |stack|clk_in~corein      ; combout          ;
; |stack|stack_pop          ; |stack|stack_pop~corein   ; combout          ;
; |stack|nrst               ; |stack|nrst~corein        ; combout          ;
; |stack|stack_in[0]        ; |stack|stack_in[0]~corein ; combout          ;
; |stack|stack_push         ; |stack|stack_push~corein  ; combout          ;
; |stack|stack_in[1]        ; |stack|stack_in[1]~corein ; combout          ;
; |stack|stack_in[2]        ; |stack|stack_in[2]~corein ; combout          ;
; |stack|stack_in[3]        ; |stack|stack_in[3]~corein ; combout          ;
; |stack|clk_in~clkctrl     ; |stack|clk_in~clkctrl     ; outclk           ;
; |stack|nrst~clkctrl       ; |stack|nrst~clkctrl       ; outclk           ;
; |stack|mem_reg1[0]~feeder ; |stack|mem_reg1[0]~feeder ; combout          ;
; |stack|mem_reg1[1]~feeder ; |stack|mem_reg1[1]~feeder ; combout          ;
; |stack|mem_reg1[2]~feeder ; |stack|mem_reg1[2]~feeder ; combout          ;
; |stack|mem_reg1[3]~feeder ; |stack|mem_reg1[3]~feeder ; combout          ;
; |stack|mem_reg2[0]~feeder ; |stack|mem_reg2[0]~feeder ; combout          ;
; |stack|mem_reg2[1]~feeder ; |stack|mem_reg2[1]~feeder ; combout          ;
; |stack|mem_reg2[2]~feeder ; |stack|mem_reg2[2]~feeder ; combout          ;
; |stack|mem_reg3[0]~feeder ; |stack|mem_reg3[0]~feeder ; combout          ;
; |stack|mem_reg3[1]~feeder ; |stack|mem_reg3[1]~feeder ; combout          ;
; |stack|mem_reg3[2]~feeder ; |stack|mem_reg3[2]~feeder ; combout          ;
; |stack|mem_reg4[0]~feeder ; |stack|mem_reg4[0]~feeder ; combout          ;
; |stack|mem_reg4[1]~feeder ; |stack|mem_reg4[1]~feeder ; combout          ;
; |stack|mem_reg4[2]~feeder ; |stack|mem_reg4[2]~feeder ; combout          ;
; |stack|mem_reg5[0]~feeder ; |stack|mem_reg5[0]~feeder ; combout          ;
; |stack|mem_reg5[1]~feeder ; |stack|mem_reg5[1]~feeder ; combout          ;
; |stack|mem_reg5[2]~feeder ; |stack|mem_reg5[2]~feeder ; combout          ;
; |stack|mem_reg6[0]~feeder ; |stack|mem_reg6[0]~feeder ; combout          ;
; |stack|mem_reg6[1]~feeder ; |stack|mem_reg6[1]~feeder ; combout          ;
; |stack|mem_reg7[0]~feeder ; |stack|mem_reg7[0]~feeder ; combout          ;
; |stack|mem_reg7[1]~feeder ; |stack|mem_reg7[1]~feeder ; combout          ;
+---------------------------+---------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+----------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                   ;
+----------------------------+----------------------------+------------------+
; Node Name                  ; Output Port Name           ; Output Port Type ;
+----------------------------+----------------------------+------------------+
; |stack|stack_out[4]~reg0   ; |stack|stack_out[4]~reg0   ; regout           ;
; |stack|stack_out[5]~reg0   ; |stack|stack_out[5]~reg0   ; regout           ;
; |stack|stack_out[6]~reg0   ; |stack|stack_out[6]~reg0   ; regout           ;
; |stack|stack_out[7]~reg0   ; |stack|stack_out[7]~reg0   ; regout           ;
; |stack|stack_out[8]~reg0   ; |stack|stack_out[8]~reg0   ; regout           ;
; |stack|stack_out[9]~reg0   ; |stack|stack_out[9]~reg0   ; regout           ;
; |stack|stack_out[10]~reg0  ; |stack|stack_out[10]~reg0  ; regout           ;
; |stack|stack_out[11]~reg0  ; |stack|stack_out[11]~reg0  ; regout           ;
; |stack|stack_out[12]~reg0  ; |stack|stack_out[12]~reg0  ; regout           ;
; |stack|mem_reg1[4]         ; |stack|mem_reg1[4]         ; regout           ;
; |stack|mem_reg1[5]         ; |stack|mem_reg1[5]         ; regout           ;
; |stack|mem_reg1[6]         ; |stack|mem_reg1[6]         ; regout           ;
; |stack|mem_reg1[7]         ; |stack|mem_reg1[7]         ; regout           ;
; |stack|mem_reg1[8]         ; |stack|mem_reg1[8]         ; regout           ;
; |stack|mem_reg1[9]         ; |stack|mem_reg1[9]         ; regout           ;
; |stack|mem_reg1[10]        ; |stack|mem_reg1[10]        ; regout           ;
; |stack|mem_reg1[11]        ; |stack|mem_reg1[11]        ; regout           ;
; |stack|mem_reg1[12]        ; |stack|mem_reg1[12]        ; regout           ;
; |stack|mem_reg2[4]         ; |stack|mem_reg2[4]         ; regout           ;
; |stack|mem_reg2[5]         ; |stack|mem_reg2[5]         ; regout           ;
; |stack|mem_reg2[6]         ; |stack|mem_reg2[6]         ; regout           ;
; |stack|mem_reg2[7]         ; |stack|mem_reg2[7]         ; regout           ;
; |stack|mem_reg2[8]         ; |stack|mem_reg2[8]         ; regout           ;
; |stack|mem_reg2[9]         ; |stack|mem_reg2[9]         ; regout           ;
; |stack|mem_reg2[10]        ; |stack|mem_reg2[10]        ; regout           ;
; |stack|mem_reg2[11]        ; |stack|mem_reg2[11]        ; regout           ;
; |stack|mem_reg2[12]        ; |stack|mem_reg2[12]        ; regout           ;
; |stack|mem_reg3[3]         ; |stack|mem_reg3[3]         ; regout           ;
; |stack|mem_reg3[4]         ; |stack|mem_reg3[4]         ; regout           ;
; |stack|mem_reg3[5]         ; |stack|mem_reg3[5]         ; regout           ;
; |stack|mem_reg3[6]         ; |stack|mem_reg3[6]         ; regout           ;
; |stack|mem_reg3[7]         ; |stack|mem_reg3[7]         ; regout           ;
; |stack|mem_reg3[8]         ; |stack|mem_reg3[8]         ; regout           ;
; |stack|mem_reg3[9]         ; |stack|mem_reg3[9]         ; regout           ;
; |stack|mem_reg3[10]        ; |stack|mem_reg3[10]        ; regout           ;
; |stack|mem_reg3[11]        ; |stack|mem_reg3[11]        ; regout           ;
; |stack|mem_reg3[12]        ; |stack|mem_reg3[12]        ; regout           ;
; |stack|mem_reg4[3]         ; |stack|mem_reg4[3]         ; regout           ;
; |stack|mem_reg4[4]         ; |stack|mem_reg4[4]         ; regout           ;
; |stack|mem_reg4[5]         ; |stack|mem_reg4[5]         ; regout           ;
; |stack|mem_reg4[6]         ; |stack|mem_reg4[6]         ; regout           ;
; |stack|mem_reg4[7]         ; |stack|mem_reg4[7]         ; regout           ;
; |stack|mem_reg4[8]         ; |stack|mem_reg4[8]         ; regout           ;
; |stack|mem_reg4[9]         ; |stack|mem_reg4[9]         ; regout           ;
; |stack|mem_reg4[10]        ; |stack|mem_reg4[10]        ; regout           ;
; |stack|mem_reg4[11]        ; |stack|mem_reg4[11]        ; regout           ;
; |stack|mem_reg4[12]        ; |stack|mem_reg4[12]        ; regout           ;
; |stack|mem_reg5[3]         ; |stack|mem_reg5[3]         ; regout           ;
; |stack|mem_reg5[4]         ; |stack|mem_reg5[4]         ; regout           ;
; |stack|mem_reg5[5]         ; |stack|mem_reg5[5]         ; regout           ;
; |stack|mem_reg5[6]         ; |stack|mem_reg5[6]         ; regout           ;
; |stack|mem_reg5[7]         ; |stack|mem_reg5[7]         ; regout           ;
; |stack|mem_reg5[8]         ; |stack|mem_reg5[8]         ; regout           ;
; |stack|mem_reg5[9]         ; |stack|mem_reg5[9]         ; regout           ;
; |stack|mem_reg5[10]        ; |stack|mem_reg5[10]        ; regout           ;
; |stack|mem_reg5[11]        ; |stack|mem_reg5[11]        ; regout           ;
; |stack|mem_reg5[12]        ; |stack|mem_reg5[12]        ; regout           ;
; |stack|mem_reg6[3]         ; |stack|mem_reg6[3]         ; regout           ;
; |stack|mem_reg6[4]         ; |stack|mem_reg6[4]         ; regout           ;
; |stack|mem_reg6[5]         ; |stack|mem_reg6[5]         ; regout           ;
; |stack|mem_reg6[6]         ; |stack|mem_reg6[6]         ; regout           ;
; |stack|mem_reg6[7]         ; |stack|mem_reg6[7]         ; regout           ;
; |stack|mem_reg6[8]         ; |stack|mem_reg6[8]         ; regout           ;
; |stack|mem_reg6[9]         ; |stack|mem_reg6[9]         ; regout           ;
; |stack|mem_reg6[10]        ; |stack|mem_reg6[10]        ; regout           ;
; |stack|mem_reg6[11]        ; |stack|mem_reg6[11]        ; regout           ;
; |stack|mem_reg6[12]        ; |stack|mem_reg6[12]        ; regout           ;
; |stack|mem_reg7[2]         ; |stack|mem_reg7[2]         ; regout           ;
; |stack|mem_reg7[3]         ; |stack|mem_reg7[3]         ; regout           ;
; |stack|mem_reg7[4]         ; |stack|mem_reg7[4]         ; regout           ;
; |stack|mem_reg7[5]         ; |stack|mem_reg7[5]         ; regout           ;
; |stack|mem_reg7[6]         ; |stack|mem_reg7[6]         ; regout           ;
; |stack|mem_reg7[7]         ; |stack|mem_reg7[7]         ; regout           ;
; |stack|mem_reg7[8]         ; |stack|mem_reg7[8]         ; regout           ;
; |stack|mem_reg7[9]         ; |stack|mem_reg7[9]         ; regout           ;
; |stack|mem_reg7[10]        ; |stack|mem_reg7[10]        ; regout           ;
; |stack|mem_reg7[11]        ; |stack|mem_reg7[11]        ; regout           ;
; |stack|mem_reg7[12]        ; |stack|mem_reg7[12]        ; regout           ;
; |stack|mem_reg8[2]         ; |stack|mem_reg8[2]         ; regout           ;
; |stack|mem_reg8[3]         ; |stack|mem_reg8[3]         ; regout           ;
; |stack|mem_reg8[4]         ; |stack|mem_reg8[4]         ; regout           ;
; |stack|mem_reg8[5]         ; |stack|mem_reg8[5]         ; regout           ;
; |stack|mem_reg8[6]         ; |stack|mem_reg8[6]         ; regout           ;
; |stack|mem_reg8[7]         ; |stack|mem_reg8[7]         ; regout           ;
; |stack|mem_reg8[8]         ; |stack|mem_reg8[8]         ; regout           ;
; |stack|mem_reg8[9]         ; |stack|mem_reg8[9]         ; regout           ;
; |stack|mem_reg8[10]        ; |stack|mem_reg8[10]        ; regout           ;
; |stack|mem_reg8[11]        ; |stack|mem_reg8[11]        ; regout           ;
; |stack|mem_reg8[12]        ; |stack|mem_reg8[12]        ; regout           ;
; |stack|stack_out[4]        ; |stack|stack_out[4]        ; padio            ;
; |stack|stack_out[5]        ; |stack|stack_out[5]        ; padio            ;
; |stack|stack_out[6]        ; |stack|stack_out[6]        ; padio            ;
; |stack|stack_out[7]        ; |stack|stack_out[7]        ; padio            ;
; |stack|stack_out[8]        ; |stack|stack_out[8]        ; padio            ;
; |stack|stack_out[9]        ; |stack|stack_out[9]        ; padio            ;
; |stack|stack_out[10]       ; |stack|stack_out[10]       ; padio            ;
; |stack|stack_out[11]       ; |stack|stack_out[11]       ; padio            ;
; |stack|stack_out[12]       ; |stack|stack_out[12]       ; padio            ;
; |stack|stack_in[4]         ; |stack|stack_in[4]~corein  ; combout          ;
; |stack|stack_in[5]         ; |stack|stack_in[5]~corein  ; combout          ;
; |stack|stack_in[6]         ; |stack|stack_in[6]~corein  ; combout          ;
; |stack|stack_in[7]         ; |stack|stack_in[7]~corein  ; combout          ;
; |stack|stack_in[8]         ; |stack|stack_in[8]~corein  ; combout          ;
; |stack|stack_in[9]         ; |stack|stack_in[9]~corein  ; combout          ;
; |stack|stack_in[10]        ; |stack|stack_in[10]~corein ; combout          ;
; |stack|stack_in[11]        ; |stack|stack_in[11]~corein ; combout          ;
; |stack|stack_in[12]        ; |stack|stack_in[12]~corein ; combout          ;
; |stack|mem_reg1[4]~feeder  ; |stack|mem_reg1[4]~feeder  ; combout          ;
; |stack|mem_reg1[5]~feeder  ; |stack|mem_reg1[5]~feeder  ; combout          ;
; |stack|mem_reg1[6]~feeder  ; |stack|mem_reg1[6]~feeder  ; combout          ;
; |stack|mem_reg1[7]~feeder  ; |stack|mem_reg1[7]~feeder  ; combout          ;
; |stack|mem_reg1[8]~feeder  ; |stack|mem_reg1[8]~feeder  ; combout          ;
; |stack|mem_reg1[9]~feeder  ; |stack|mem_reg1[9]~feeder  ; combout          ;
; |stack|mem_reg1[10]~feeder ; |stack|mem_reg1[10]~feeder ; combout          ;
; |stack|mem_reg1[11]~feeder ; |stack|mem_reg1[11]~feeder ; combout          ;
; |stack|mem_reg1[12]~feeder ; |stack|mem_reg1[12]~feeder ; combout          ;
; |stack|mem_reg2[3]~feeder  ; |stack|mem_reg2[3]~feeder  ; combout          ;
; |stack|mem_reg2[4]~feeder  ; |stack|mem_reg2[4]~feeder  ; combout          ;
; |stack|mem_reg2[5]~feeder  ; |stack|mem_reg2[5]~feeder  ; combout          ;
; |stack|mem_reg2[6]~feeder  ; |stack|mem_reg2[6]~feeder  ; combout          ;
; |stack|mem_reg2[7]~feeder  ; |stack|mem_reg2[7]~feeder  ; combout          ;
; |stack|mem_reg2[8]~feeder  ; |stack|mem_reg2[8]~feeder  ; combout          ;
; |stack|mem_reg2[9]~feeder  ; |stack|mem_reg2[9]~feeder  ; combout          ;
; |stack|mem_reg2[10]~feeder ; |stack|mem_reg2[10]~feeder ; combout          ;
; |stack|mem_reg2[11]~feeder ; |stack|mem_reg2[11]~feeder ; combout          ;
; |stack|mem_reg2[12]~feeder ; |stack|mem_reg2[12]~feeder ; combout          ;
; |stack|mem_reg3[3]~feeder  ; |stack|mem_reg3[3]~feeder  ; combout          ;
; |stack|mem_reg3[4]~feeder  ; |stack|mem_reg3[4]~feeder  ; combout          ;
; |stack|mem_reg3[5]~feeder  ; |stack|mem_reg3[5]~feeder  ; combout          ;
; |stack|mem_reg3[6]~feeder  ; |stack|mem_reg3[6]~feeder  ; combout          ;
; |stack|mem_reg3[7]~feeder  ; |stack|mem_reg3[7]~feeder  ; combout          ;
; |stack|mem_reg3[8]~feeder  ; |stack|mem_reg3[8]~feeder  ; combout          ;
; |stack|mem_reg3[9]~feeder  ; |stack|mem_reg3[9]~feeder  ; combout          ;
; |stack|mem_reg3[10]~feeder ; |stack|mem_reg3[10]~feeder ; combout          ;
; |stack|mem_reg3[11]~feeder ; |stack|mem_reg3[11]~feeder ; combout          ;
; |stack|mem_reg3[12]~feeder ; |stack|mem_reg3[12]~feeder ; combout          ;
; |stack|mem_reg4[3]~feeder  ; |stack|mem_reg4[3]~feeder  ; combout          ;
; |stack|mem_reg4[4]~feeder  ; |stack|mem_reg4[4]~feeder  ; combout          ;
; |stack|mem_reg4[5]~feeder  ; |stack|mem_reg4[5]~feeder  ; combout          ;
; |stack|mem_reg4[6]~feeder  ; |stack|mem_reg4[6]~feeder  ; combout          ;
; |stack|mem_reg4[7]~feeder  ; |stack|mem_reg4[7]~feeder  ; combout          ;
; |stack|mem_reg4[8]~feeder  ; |stack|mem_reg4[8]~feeder  ; combout          ;
; |stack|mem_reg4[9]~feeder  ; |stack|mem_reg4[9]~feeder  ; combout          ;
; |stack|mem_reg4[10]~feeder ; |stack|mem_reg4[10]~feeder ; combout          ;
; |stack|mem_reg4[11]~feeder ; |stack|mem_reg4[11]~feeder ; combout          ;
; |stack|mem_reg4[12]~feeder ; |stack|mem_reg4[12]~feeder ; combout          ;
; |stack|mem_reg5[3]~feeder  ; |stack|mem_reg5[3]~feeder  ; combout          ;
; |stack|mem_reg5[4]~feeder  ; |stack|mem_reg5[4]~feeder  ; combout          ;
; |stack|mem_reg5[5]~feeder  ; |stack|mem_reg5[5]~feeder  ; combout          ;
; |stack|mem_reg5[6]~feeder  ; |stack|mem_reg5[6]~feeder  ; combout          ;
; |stack|mem_reg5[7]~feeder  ; |stack|mem_reg5[7]~feeder  ; combout          ;
; |stack|mem_reg5[8]~feeder  ; |stack|mem_reg5[8]~feeder  ; combout          ;
; |stack|mem_reg5[9]~feeder  ; |stack|mem_reg5[9]~feeder  ; combout          ;
; |stack|mem_reg5[10]~feeder ; |stack|mem_reg5[10]~feeder ; combout          ;
; |stack|mem_reg5[11]~feeder ; |stack|mem_reg5[11]~feeder ; combout          ;
; |stack|mem_reg5[12]~feeder ; |stack|mem_reg5[12]~feeder ; combout          ;
; |stack|mem_reg6[2]~feeder  ; |stack|mem_reg6[2]~feeder  ; combout          ;
; |stack|mem_reg6[3]~feeder  ; |stack|mem_reg6[3]~feeder  ; combout          ;
; |stack|mem_reg6[4]~feeder  ; |stack|mem_reg6[4]~feeder  ; combout          ;
; |stack|mem_reg6[5]~feeder  ; |stack|mem_reg6[5]~feeder  ; combout          ;
; |stack|mem_reg6[6]~feeder  ; |stack|mem_reg6[6]~feeder  ; combout          ;
; |stack|mem_reg6[7]~feeder  ; |stack|mem_reg6[7]~feeder  ; combout          ;
; |stack|mem_reg6[8]~feeder  ; |stack|mem_reg6[8]~feeder  ; combout          ;
; |stack|mem_reg6[9]~feeder  ; |stack|mem_reg6[9]~feeder  ; combout          ;
; |stack|mem_reg6[10]~feeder ; |stack|mem_reg6[10]~feeder ; combout          ;
; |stack|mem_reg6[11]~feeder ; |stack|mem_reg6[11]~feeder ; combout          ;
; |stack|mem_reg6[12]~feeder ; |stack|mem_reg6[12]~feeder ; combout          ;
; |stack|mem_reg7[2]~feeder  ; |stack|mem_reg7[2]~feeder  ; combout          ;
; |stack|mem_reg7[3]~feeder  ; |stack|mem_reg7[3]~feeder  ; combout          ;
; |stack|mem_reg7[4]~feeder  ; |stack|mem_reg7[4]~feeder  ; combout          ;
; |stack|mem_reg7[5]~feeder  ; |stack|mem_reg7[5]~feeder  ; combout          ;
; |stack|mem_reg7[6]~feeder  ; |stack|mem_reg7[6]~feeder  ; combout          ;
; |stack|mem_reg7[7]~feeder  ; |stack|mem_reg7[7]~feeder  ; combout          ;
; |stack|mem_reg7[8]~feeder  ; |stack|mem_reg7[8]~feeder  ; combout          ;
; |stack|mem_reg7[9]~feeder  ; |stack|mem_reg7[9]~feeder  ; combout          ;
; |stack|mem_reg7[10]~feeder ; |stack|mem_reg7[10]~feeder ; combout          ;
; |stack|mem_reg7[11]~feeder ; |stack|mem_reg7[11]~feeder ; combout          ;
; |stack|mem_reg7[12]~feeder ; |stack|mem_reg7[12]~feeder ; combout          ;
+----------------------------+----------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+----------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                   ;
+----------------------------+----------------------------+------------------+
; Node Name                  ; Output Port Name           ; Output Port Type ;
+----------------------------+----------------------------+------------------+
; |stack|stack_out[4]~reg0   ; |stack|stack_out[4]~reg0   ; regout           ;
; |stack|stack_out[5]~reg0   ; |stack|stack_out[5]~reg0   ; regout           ;
; |stack|stack_out[6]~reg0   ; |stack|stack_out[6]~reg0   ; regout           ;
; |stack|stack_out[7]~reg0   ; |stack|stack_out[7]~reg0   ; regout           ;
; |stack|stack_out[8]~reg0   ; |stack|stack_out[8]~reg0   ; regout           ;
; |stack|stack_out[9]~reg0   ; |stack|stack_out[9]~reg0   ; regout           ;
; |stack|stack_out[10]~reg0  ; |stack|stack_out[10]~reg0  ; regout           ;
; |stack|stack_out[11]~reg0  ; |stack|stack_out[11]~reg0  ; regout           ;
; |stack|stack_out[12]~reg0  ; |stack|stack_out[12]~reg0  ; regout           ;
; |stack|mem_reg1[4]         ; |stack|mem_reg1[4]         ; regout           ;
; |stack|mem_reg1[5]         ; |stack|mem_reg1[5]         ; regout           ;
; |stack|mem_reg1[6]         ; |stack|mem_reg1[6]         ; regout           ;
; |stack|mem_reg1[7]         ; |stack|mem_reg1[7]         ; regout           ;
; |stack|mem_reg1[8]         ; |stack|mem_reg1[8]         ; regout           ;
; |stack|mem_reg1[9]         ; |stack|mem_reg1[9]         ; regout           ;
; |stack|mem_reg1[10]        ; |stack|mem_reg1[10]        ; regout           ;
; |stack|mem_reg1[11]        ; |stack|mem_reg1[11]        ; regout           ;
; |stack|mem_reg1[12]        ; |stack|mem_reg1[12]        ; regout           ;
; |stack|mem_reg2[4]         ; |stack|mem_reg2[4]         ; regout           ;
; |stack|mem_reg2[5]         ; |stack|mem_reg2[5]         ; regout           ;
; |stack|mem_reg2[6]         ; |stack|mem_reg2[6]         ; regout           ;
; |stack|mem_reg2[7]         ; |stack|mem_reg2[7]         ; regout           ;
; |stack|mem_reg2[8]         ; |stack|mem_reg2[8]         ; regout           ;
; |stack|mem_reg2[9]         ; |stack|mem_reg2[9]         ; regout           ;
; |stack|mem_reg2[10]        ; |stack|mem_reg2[10]        ; regout           ;
; |stack|mem_reg2[11]        ; |stack|mem_reg2[11]        ; regout           ;
; |stack|mem_reg2[12]        ; |stack|mem_reg2[12]        ; regout           ;
; |stack|mem_reg3[3]         ; |stack|mem_reg3[3]         ; regout           ;
; |stack|mem_reg3[4]         ; |stack|mem_reg3[4]         ; regout           ;
; |stack|mem_reg3[5]         ; |stack|mem_reg3[5]         ; regout           ;
; |stack|mem_reg3[6]         ; |stack|mem_reg3[6]         ; regout           ;
; |stack|mem_reg3[7]         ; |stack|mem_reg3[7]         ; regout           ;
; |stack|mem_reg3[8]         ; |stack|mem_reg3[8]         ; regout           ;
; |stack|mem_reg3[9]         ; |stack|mem_reg3[9]         ; regout           ;
; |stack|mem_reg3[10]        ; |stack|mem_reg3[10]        ; regout           ;
; |stack|mem_reg3[11]        ; |stack|mem_reg3[11]        ; regout           ;
; |stack|mem_reg3[12]        ; |stack|mem_reg3[12]        ; regout           ;
; |stack|mem_reg4[3]         ; |stack|mem_reg4[3]         ; regout           ;
; |stack|mem_reg4[4]         ; |stack|mem_reg4[4]         ; regout           ;
; |stack|mem_reg4[5]         ; |stack|mem_reg4[5]         ; regout           ;
; |stack|mem_reg4[6]         ; |stack|mem_reg4[6]         ; regout           ;
; |stack|mem_reg4[7]         ; |stack|mem_reg4[7]         ; regout           ;
; |stack|mem_reg4[8]         ; |stack|mem_reg4[8]         ; regout           ;
; |stack|mem_reg4[9]         ; |stack|mem_reg4[9]         ; regout           ;
; |stack|mem_reg4[10]        ; |stack|mem_reg4[10]        ; regout           ;
; |stack|mem_reg4[11]        ; |stack|mem_reg4[11]        ; regout           ;
; |stack|mem_reg4[12]        ; |stack|mem_reg4[12]        ; regout           ;
; |stack|mem_reg5[3]         ; |stack|mem_reg5[3]         ; regout           ;
; |stack|mem_reg5[4]         ; |stack|mem_reg5[4]         ; regout           ;
; |stack|mem_reg5[5]         ; |stack|mem_reg5[5]         ; regout           ;
; |stack|mem_reg5[6]         ; |stack|mem_reg5[6]         ; regout           ;
; |stack|mem_reg5[7]         ; |stack|mem_reg5[7]         ; regout           ;
; |stack|mem_reg5[8]         ; |stack|mem_reg5[8]         ; regout           ;
; |stack|mem_reg5[9]         ; |stack|mem_reg5[9]         ; regout           ;
; |stack|mem_reg5[10]        ; |stack|mem_reg5[10]        ; regout           ;
; |stack|mem_reg5[11]        ; |stack|mem_reg5[11]        ; regout           ;
; |stack|mem_reg5[12]        ; |stack|mem_reg5[12]        ; regout           ;
; |stack|mem_reg6[3]         ; |stack|mem_reg6[3]         ; regout           ;
; |stack|mem_reg6[4]         ; |stack|mem_reg6[4]         ; regout           ;
; |stack|mem_reg6[5]         ; |stack|mem_reg6[5]         ; regout           ;
; |stack|mem_reg6[6]         ; |stack|mem_reg6[6]         ; regout           ;
; |stack|mem_reg6[7]         ; |stack|mem_reg6[7]         ; regout           ;
; |stack|mem_reg6[8]         ; |stack|mem_reg6[8]         ; regout           ;
; |stack|mem_reg6[9]         ; |stack|mem_reg6[9]         ; regout           ;
; |stack|mem_reg6[10]        ; |stack|mem_reg6[10]        ; regout           ;
; |stack|mem_reg6[11]        ; |stack|mem_reg6[11]        ; regout           ;
; |stack|mem_reg6[12]        ; |stack|mem_reg6[12]        ; regout           ;
; |stack|mem_reg7[2]         ; |stack|mem_reg7[2]         ; regout           ;
; |stack|mem_reg7[3]         ; |stack|mem_reg7[3]         ; regout           ;
; |stack|mem_reg7[4]         ; |stack|mem_reg7[4]         ; regout           ;
; |stack|mem_reg7[5]         ; |stack|mem_reg7[5]         ; regout           ;
; |stack|mem_reg7[6]         ; |stack|mem_reg7[6]         ; regout           ;
; |stack|mem_reg7[7]         ; |stack|mem_reg7[7]         ; regout           ;
; |stack|mem_reg7[8]         ; |stack|mem_reg7[8]         ; regout           ;
; |stack|mem_reg7[9]         ; |stack|mem_reg7[9]         ; regout           ;
; |stack|mem_reg7[10]        ; |stack|mem_reg7[10]        ; regout           ;
; |stack|mem_reg7[11]        ; |stack|mem_reg7[11]        ; regout           ;
; |stack|mem_reg7[12]        ; |stack|mem_reg7[12]        ; regout           ;
; |stack|mem_reg8[2]         ; |stack|mem_reg8[2]         ; regout           ;
; |stack|mem_reg8[3]         ; |stack|mem_reg8[3]         ; regout           ;
; |stack|mem_reg8[4]         ; |stack|mem_reg8[4]         ; regout           ;
; |stack|mem_reg8[5]         ; |stack|mem_reg8[5]         ; regout           ;
; |stack|mem_reg8[6]         ; |stack|mem_reg8[6]         ; regout           ;
; |stack|mem_reg8[7]         ; |stack|mem_reg8[7]         ; regout           ;
; |stack|mem_reg8[8]         ; |stack|mem_reg8[8]         ; regout           ;
; |stack|mem_reg8[9]         ; |stack|mem_reg8[9]         ; regout           ;
; |stack|mem_reg8[10]        ; |stack|mem_reg8[10]        ; regout           ;
; |stack|mem_reg8[11]        ; |stack|mem_reg8[11]        ; regout           ;
; |stack|mem_reg8[12]        ; |stack|mem_reg8[12]        ; regout           ;
; |stack|stack_out[4]        ; |stack|stack_out[4]        ; padio            ;
; |stack|stack_out[5]        ; |stack|stack_out[5]        ; padio            ;
; |stack|stack_out[6]        ; |stack|stack_out[6]        ; padio            ;
; |stack|stack_out[7]        ; |stack|stack_out[7]        ; padio            ;
; |stack|stack_out[8]        ; |stack|stack_out[8]        ; padio            ;
; |stack|stack_out[9]        ; |stack|stack_out[9]        ; padio            ;
; |stack|stack_out[10]       ; |stack|stack_out[10]       ; padio            ;
; |stack|stack_out[11]       ; |stack|stack_out[11]       ; padio            ;
; |stack|stack_out[12]       ; |stack|stack_out[12]       ; padio            ;
; |stack|stack_in[4]         ; |stack|stack_in[4]~corein  ; combout          ;
; |stack|stack_in[5]         ; |stack|stack_in[5]~corein  ; combout          ;
; |stack|stack_in[6]         ; |stack|stack_in[6]~corein  ; combout          ;
; |stack|stack_in[7]         ; |stack|stack_in[7]~corein  ; combout          ;
; |stack|stack_in[8]         ; |stack|stack_in[8]~corein  ; combout          ;
; |stack|stack_in[9]         ; |stack|stack_in[9]~corein  ; combout          ;
; |stack|stack_in[10]        ; |stack|stack_in[10]~corein ; combout          ;
; |stack|stack_in[11]        ; |stack|stack_in[11]~corein ; combout          ;
; |stack|stack_in[12]        ; |stack|stack_in[12]~corein ; combout          ;
; |stack|mem_reg1[4]~feeder  ; |stack|mem_reg1[4]~feeder  ; combout          ;
; |stack|mem_reg1[5]~feeder  ; |stack|mem_reg1[5]~feeder  ; combout          ;
; |stack|mem_reg1[6]~feeder  ; |stack|mem_reg1[6]~feeder  ; combout          ;
; |stack|mem_reg1[7]~feeder  ; |stack|mem_reg1[7]~feeder  ; combout          ;
; |stack|mem_reg1[8]~feeder  ; |stack|mem_reg1[8]~feeder  ; combout          ;
; |stack|mem_reg1[9]~feeder  ; |stack|mem_reg1[9]~feeder  ; combout          ;
; |stack|mem_reg1[10]~feeder ; |stack|mem_reg1[10]~feeder ; combout          ;
; |stack|mem_reg1[11]~feeder ; |stack|mem_reg1[11]~feeder ; combout          ;
; |stack|mem_reg1[12]~feeder ; |stack|mem_reg1[12]~feeder ; combout          ;
; |stack|mem_reg2[3]~feeder  ; |stack|mem_reg2[3]~feeder  ; combout          ;
; |stack|mem_reg2[4]~feeder  ; |stack|mem_reg2[4]~feeder  ; combout          ;
; |stack|mem_reg2[5]~feeder  ; |stack|mem_reg2[5]~feeder  ; combout          ;
; |stack|mem_reg2[6]~feeder  ; |stack|mem_reg2[6]~feeder  ; combout          ;
; |stack|mem_reg2[7]~feeder  ; |stack|mem_reg2[7]~feeder  ; combout          ;
; |stack|mem_reg2[8]~feeder  ; |stack|mem_reg2[8]~feeder  ; combout          ;
; |stack|mem_reg2[9]~feeder  ; |stack|mem_reg2[9]~feeder  ; combout          ;
; |stack|mem_reg2[10]~feeder ; |stack|mem_reg2[10]~feeder ; combout          ;
; |stack|mem_reg2[11]~feeder ; |stack|mem_reg2[11]~feeder ; combout          ;
; |stack|mem_reg2[12]~feeder ; |stack|mem_reg2[12]~feeder ; combout          ;
; |stack|mem_reg3[3]~feeder  ; |stack|mem_reg3[3]~feeder  ; combout          ;
; |stack|mem_reg3[4]~feeder  ; |stack|mem_reg3[4]~feeder  ; combout          ;
; |stack|mem_reg3[5]~feeder  ; |stack|mem_reg3[5]~feeder  ; combout          ;
; |stack|mem_reg3[6]~feeder  ; |stack|mem_reg3[6]~feeder  ; combout          ;
; |stack|mem_reg3[7]~feeder  ; |stack|mem_reg3[7]~feeder  ; combout          ;
; |stack|mem_reg3[8]~feeder  ; |stack|mem_reg3[8]~feeder  ; combout          ;
; |stack|mem_reg3[9]~feeder  ; |stack|mem_reg3[9]~feeder  ; combout          ;
; |stack|mem_reg3[10]~feeder ; |stack|mem_reg3[10]~feeder ; combout          ;
; |stack|mem_reg3[11]~feeder ; |stack|mem_reg3[11]~feeder ; combout          ;
; |stack|mem_reg3[12]~feeder ; |stack|mem_reg3[12]~feeder ; combout          ;
; |stack|mem_reg4[3]~feeder  ; |stack|mem_reg4[3]~feeder  ; combout          ;
; |stack|mem_reg4[4]~feeder  ; |stack|mem_reg4[4]~feeder  ; combout          ;
; |stack|mem_reg4[5]~feeder  ; |stack|mem_reg4[5]~feeder  ; combout          ;
; |stack|mem_reg4[6]~feeder  ; |stack|mem_reg4[6]~feeder  ; combout          ;
; |stack|mem_reg4[7]~feeder  ; |stack|mem_reg4[7]~feeder  ; combout          ;
; |stack|mem_reg4[8]~feeder  ; |stack|mem_reg4[8]~feeder  ; combout          ;
; |stack|mem_reg4[9]~feeder  ; |stack|mem_reg4[9]~feeder  ; combout          ;
; |stack|mem_reg4[10]~feeder ; |stack|mem_reg4[10]~feeder ; combout          ;
; |stack|mem_reg4[11]~feeder ; |stack|mem_reg4[11]~feeder ; combout          ;
; |stack|mem_reg4[12]~feeder ; |stack|mem_reg4[12]~feeder ; combout          ;
; |stack|mem_reg5[3]~feeder  ; |stack|mem_reg5[3]~feeder  ; combout          ;
; |stack|mem_reg5[4]~feeder  ; |stack|mem_reg5[4]~feeder  ; combout          ;
; |stack|mem_reg5[5]~feeder  ; |stack|mem_reg5[5]~feeder  ; combout          ;
; |stack|mem_reg5[6]~feeder  ; |stack|mem_reg5[6]~feeder  ; combout          ;
; |stack|mem_reg5[7]~feeder  ; |stack|mem_reg5[7]~feeder  ; combout          ;
; |stack|mem_reg5[8]~feeder  ; |stack|mem_reg5[8]~feeder  ; combout          ;
; |stack|mem_reg5[9]~feeder  ; |stack|mem_reg5[9]~feeder  ; combout          ;
; |stack|mem_reg5[10]~feeder ; |stack|mem_reg5[10]~feeder ; combout          ;
; |stack|mem_reg5[11]~feeder ; |stack|mem_reg5[11]~feeder ; combout          ;
; |stack|mem_reg5[12]~feeder ; |stack|mem_reg5[12]~feeder ; combout          ;
; |stack|mem_reg6[2]~feeder  ; |stack|mem_reg6[2]~feeder  ; combout          ;
; |stack|mem_reg6[3]~feeder  ; |stack|mem_reg6[3]~feeder  ; combout          ;
; |stack|mem_reg6[4]~feeder  ; |stack|mem_reg6[4]~feeder  ; combout          ;
; |stack|mem_reg6[5]~feeder  ; |stack|mem_reg6[5]~feeder  ; combout          ;
; |stack|mem_reg6[6]~feeder  ; |stack|mem_reg6[6]~feeder  ; combout          ;
; |stack|mem_reg6[7]~feeder  ; |stack|mem_reg6[7]~feeder  ; combout          ;
; |stack|mem_reg6[8]~feeder  ; |stack|mem_reg6[8]~feeder  ; combout          ;
; |stack|mem_reg6[9]~feeder  ; |stack|mem_reg6[9]~feeder  ; combout          ;
; |stack|mem_reg6[10]~feeder ; |stack|mem_reg6[10]~feeder ; combout          ;
; |stack|mem_reg6[11]~feeder ; |stack|mem_reg6[11]~feeder ; combout          ;
; |stack|mem_reg6[12]~feeder ; |stack|mem_reg6[12]~feeder ; combout          ;
; |stack|mem_reg7[2]~feeder  ; |stack|mem_reg7[2]~feeder  ; combout          ;
; |stack|mem_reg7[3]~feeder  ; |stack|mem_reg7[3]~feeder  ; combout          ;
; |stack|mem_reg7[4]~feeder  ; |stack|mem_reg7[4]~feeder  ; combout          ;
; |stack|mem_reg7[5]~feeder  ; |stack|mem_reg7[5]~feeder  ; combout          ;
; |stack|mem_reg7[6]~feeder  ; |stack|mem_reg7[6]~feeder  ; combout          ;
; |stack|mem_reg7[7]~feeder  ; |stack|mem_reg7[7]~feeder  ; combout          ;
; |stack|mem_reg7[8]~feeder  ; |stack|mem_reg7[8]~feeder  ; combout          ;
; |stack|mem_reg7[9]~feeder  ; |stack|mem_reg7[9]~feeder  ; combout          ;
; |stack|mem_reg7[10]~feeder ; |stack|mem_reg7[10]~feeder ; combout          ;
; |stack|mem_reg7[11]~feeder ; |stack|mem_reg7[11]~feeder ; combout          ;
; |stack|mem_reg7[12]~feeder ; |stack|mem_reg7[12]~feeder ; combout          ;
+----------------------------+----------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Sat Nov 09 21:11:36 2024
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off stack -c stack
Info: Using vector source file "C:/users/crossover/Documents/stack/stack.vwf"
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      26.14 %
Info: Number of transitions in simulation is 956
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 84 megabytes
    Info: Processing ended: Sat Nov 09 21:11:36 2024
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


